<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.o2osys.log.server.dao.AttributeDao">

    <resultMap id="BaseResultMap" type="com.o2osys.log.server.po.Attribute">
        <id column="id" jdbcType="CHAR" property="id" />
        <result column="operation_id" jdbcType="CHAR" property="operationId" />
        <result column="attribute_type" jdbcType="VARCHAR" property="attributeType" />
        <result column="attribute_name" jdbcType="VARCHAR" property="attributeName" />
        <result column="attribute_alias" jdbcType="VARCHAR" property="attributeAlias" />
        <result column="old_value" jdbcType="VARCHAR" property="oldValue" />
        <result column="new_value" jdbcType="VARCHAR" property="newValue" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Jun 16 09:51:19 CST 2020.
        -->
        id, operation_id, attribute_type, attribute_name, attribute_alias, old_value, new_value,remark
    </sql>
    <select id="queryByOperationIdList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        FROM ${tableName}
        WHERE operation_id IN
        <foreach item="operationId" collection="list" open="("
                 separator="," close=")">
            #{operationId}
        </foreach>
        order by create_time
    </select>

    <select id="queryByFilter" parameterType="com.o2osys.log.server.po.Attribute" resultType="com.o2osys.log.server.po.Attribute">
        SELECT * FROM attribute_${appName}
        <where>
            <if test="id != null">
                `id`=#{id}
            </if>
            <if test="operationId != null">
                AND `operationId`=#{operationId}
            </if>
            <if test="attributeType != null">
                AND `attributeType`=#{attributeType}
            </if>
            <if test="attributeName != null">
                AND `attributeName`=#{attributeName}
            </if>
            <if test="attributeAlias != null">
                AND `attributeAlias`=#{attributeAlias}
            </if>
            <if test="oldValue != null">
                AND `oldValue`=#{oldValue}
            </if>
            <if test="newValue != null">
                AND `newValue`=#{newValue}
            </if>
        </where>
    </select>

    <insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
        INSERT INTO ${tableName} (id, operation_id, attribute_type, attribute_name, attribute_alias, old_value, new_value)
        VALUES
        <foreach collection="attributeModelList" item="item" index="index" separator=",">
            (#{item.id},#{item.operationId},#{item.attributeType},#{item.attributeName},#{item.attributeAlias},
            #{item.oldValue},#{item.newValue})
        </foreach>

    </insert>

    <!-- 是否存在表 -->
    <select id="existTable" parameterType="java.lang.String" resultType="java.lang.Integer">
      select COUNT(0) count from information_schema.`TABLES` where TABLE_NAME = #{tableName} and TABLE_SCHEMA = 'operate_log'
    </select>

    <!-- 动态创建操作表 -->
    <update id="create" parameterType="java.lang.String">
        CREATE TABLE ${tableName} (
          `id` char(22) NOT NULL,
          `operation_id` char(22) NOT NULL DEFAULT '' COMMENT '操作表的id',
          `attribute_type` varchar(30) NOT NULL DEFAULT '' COMMENT '属性类型',
          `attribute_name` varchar(60) NOT NULL DEFAULT '' COMMENT '属性名',
          `attribute_alias` varchar(60) NOT NULL DEFAULT '' COMMENT '属性别名',
          `old_value` varchar(500) DEFAULT '',
          `new_value` varchar(500) DEFAULT '',
          `remark` varchar(300) DEFAULT '' COMMENT '备注',
          `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
          PRIMARY KEY (`id`),
          KEY `operation_id` (`operation_id`) USING BTREE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT '属性表';

    </update>

    <update id="addTrigger" parameterType="java.lang.String">

        CREATE TRIGGER `remark` BEFORE INSERT ON  ${tableName} FOR EACH ROW BEGIN
            IF NEW.old_value = '' OR  NEW.old_value is null
                THEN
                    SET NEW.remark = CONCAT('将 ',NEW.attribute_alias,' 设置成 ',NEW.new_value);
            ELSE
                SET NEW.remark = CONCAT('将 ',NEW.attribute_alias,' 由 ',NEW.old_value,' 修改成 ',NEW.new_value);
            END IF;
        END;
    </update>

</mapper>
